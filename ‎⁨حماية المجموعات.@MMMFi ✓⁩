
#This bot is developed by Hamoudi AL-Amir 𓅂
#Developer Channel | @MMMFi ✓.

import telebot
import time
import os
from gtts import gTTS
import random
from telebot.types import ChatMember
from telebot import types
token = "7819573158:AAHn019yVrRpBMZtfVmrSdV7fbiLJ9j5GlY"   #توكنك
bot = telebot.TeleBot(token)
btn = types.InlineKeyboardButton(text='صانع بوتات الامير 𓅂', url = "http://t.me/MOQ_Bot?start")
@bot.message_handler(commands=["start"])
def start(message):
	brok = types.InlineKeyboardMarkup()
	brok.add(btn)
	bot.reply_to(message,text='''⌯︙أهلآ بك عزيزي 🙋‍♂
⌯︙اختصاص البوت حماية المجموعات 🔥
⌯︙لتفعيل البوت عليك اتباع مايلي 👇...
⌯︙اضف البوت الى مجموعتك 
⌯︙ارفعه ادمن {مشرف} 
⌯︙ارسل كلمة { تفعيل } ليتم تشغيل البوت في مجموعتك ''',reply_markup=brok)

admin_id = "ID"   #ايديك
userk = [ID]   #ايديك

@bot.message_handler(func=lambda message: message.text == "الاوامر")
def lock_images(message):

    user_id = message.from_user.id
    chat_id = message.chat.id
    member = bot.get_chat_member(chat_id, user_id)

    if member.status in ['administrator', 'creator']:
        
        if chat_id not in locked_groups:
            locked_groups.append(chat_id)
        bot.reply_to(message, """⌁︙اهلا عزيزي الادمن 🧜🏻 .
⌁︙ اوامر الحماية ارسل ↫`M1`
⌁︙اوامر الالعاب ارسل ↫`M2`
⌁︙اوامر التسلية ارسل ↫`M3`
⌁︙اوامر اخرى ارسل ↫`M4`
 ⌁︙اضغط على الامر لـ النسخ 👾""",parse_mode="markdown")
    else:
        bot.reply_to(message, "⌁︙انت مو ادمن ياعضو 💃🏻 !")
                   
@bot.message_handler(func=lambda message: message.text == "تفعيل" )
def lock_images(message):

    user_id = message.from_user.id
    chat_id = message.chat.id
    member = bot.get_chat_member(chat_id, user_id)

    if member.status in ['administrator', 'creator']:
        
        if chat_id not in locked_groups:
            locked_groups.append(chat_id)
        bot.reply_to(message, """*- تـم تفعيل البوت بنجاح ✅

• ارسل (*`الاوامر`*) لمعرفة اوامر البوت 💯*""",parse_mode="markdown")
    else:
        bot.reply_to(message, "⌁︙انت مو ادمن ياعضو 💃🏻 !")
        
        
@bot.message_handler(func=lambda message: message.text == "M1")
def lock_images(message):

    user_id = message.from_user.id
    chat_id = message.chat.id
    member = bot.get_chat_member(chat_id, user_id)

    if member.status in ['administrator', 'creator']:
        
        if chat_id not in locked_groups:
            locked_groups.append(chat_id)
        bot.reply_to(message, """*⌁︙اهلا عزيزي الادمن باوامر الحماية 🛡️ .*
        
⌁︙`حظر` | (بالرد )* يحظر العضو *
⌁︙`الغاء الحظر` | (بالرد ) *يلغي حظر العضو*
⌁︙`تقييد` | ( بالرد ) *يقييد العضو من الكتابة*
⌁︙`الغاء التقييد` | ( بالرد ) *يلغي تقييد العضو*
⌁︙`تقييد وقتي` | ( بالرد ) *يقييد العضو لمدة 10 دقائق*
⌁︙`تحذير` | ( بالرد ) * إذا تم تحذير الشخص ثلاث مرات يتم تقييده*
⌁︙`قفل الصور` | *يبدأ البوت بمسح الصور التي يرسلها الاعضاء*
⌁︙`فتح الصور` | *يتوقف البوت عن مسح الصور التي يرسلها الاعضاء*
⌁︙`قفل الملصقات` | *يبدأ البوت بمسح الملصقات التي يرسلها الاعضاء*
⌁︙`فتح الملصقات` | *يتوقف البوت عن مسح الملصقات التي يرسلها الاعضاء*

*⌁︙ يستطيع التحكم في هذه الأوامر المشرفين والأمنية في المجموعة ✅*
⌁︙اضغط على اي امر لنسخه 👾 .""",parse_mode="markdown")
    else:
        bot.reply_to(message, "⌁︙انت مو ادمن ياعضو 💃🏻 !")        
        
@bot.message_handler(func=lambda msg: msg.text is not None and "M2" in msg.text)
def reply_hello(message):
    bot.reply_to(message, """*⌁︙اهلا عزيزي باوامر الالعاب 🎮🕹️ .*
⌁︙`نرد` ↫يرسلك رقم من 1 الى 6 اذا طلع 6 انت فايز بس اذا طلع 5 او 4 او 3 او 2 او 1 تخسر 😔 .
⌁︙`سلة` ↫يرسل لك لعبة كرة السلة .
⌁︙`كرة` ↫يرسل لك لعبة كرة القدم .
⌁︙`الاسرع` ↫يرسل لك كلمة واسرع احد يكتبها يفوز .
- اضغط على اسم اللعبة للنسخ 👾 .""",parse_mode="markdown")

@bot.message_handler(func=lambda msg: msg.text is not None and "الالعاب" in msg.text)
def reply_hello(message):
    bot.reply_to(message, """*⌁︙اهلا عزيزي  باوامر الالعاب 🎮🕹️ .*
⌁︙`نرد` ↫يرسلك رقم من 1 الى 6 اذا طلع 6 انت فايز بس اذا طلع 5 او 4 او 3 او 2 او 1 تخسر 😔 .
⌁︙`سلة` ↫يرسل لك لعبة كرة السلة .
⌁︙`كرة` ↫يرسل لك لعبة كرة القدم .
⌁︙`الاسرع` ↫يرسل لك كلمة واسرع شخص يكتبها يفوز .
- اضغط على اسم اللعبة للنسخ 👾 .**""",parse_mode="markdown")
        
@bot.message_handler(func=lambda msg: msg.text is not None and "M3" in msg.text)
def reply_hello(message):
    bot.reply_to(message, """*⌁︙اهلا عزيزي باوامر التسلية 💃🏻 .*
⌁︙رد على الشخص من اجل استعمال الامر
⌁︙`رفع حلو`
⌁︙`ذكائي`
⌁︙`غبائي`
⌁︙`تحبني`
*⌁︙اضغط على اي وحدة لنسخها 👾 .
⌁︙الاوامر يقدر يستخدمها العضو عادي 💃🏻 .*
⌁︙قريباً اوامر اكثر 😉 .""",parse_mode="markdown")                



@bot.message_handler(func=lambda msg: msg.text is not None and "M4" in msg.text)
def reply_hello(message):
    bot.reply_to(message, """*⌁︙اهلا عزيزي باوامر أخرى 🪗 .*
⌁︙`ايدي`
⌁︙`ايدي المجموعة`
⌁︙`الرابط`
⌁︙`المالك`
⌁︙`سورس`
⌁︙`السورس`
⌁︙`تفاعلي`
⌁︙`شعر`
⌁︙`سوره`
*⌁︙اوامر النطق 🔊... *
⌁︙`انطق` + الرسالة 
*⌁︙مثال* ( انطق مرحبا )
*⌁︙اضغط على اي وحدة لنسخها 👾 .*""",parse_mode="markdown")                                     
@bot.message_handler(func=lambda message: message.text == 'المالك')
def get_group_owner(message):
    if message.chat.type == 'supergroup' or message.chat.type == 'group':
        chat_id = message.chat.id
        chat_admins = bot.get_chat_administrators(chat_id)

        for admin in chat_admins:
            if admin.status == 'creator':
                owner_id = admin.user.id
                owner_username = admin.user.username
                owner_name = admin.user.first_name

                if hasattr(admin.user, 'photo'):
                    owner_photo_id = admin.user.photo.big_file_id
                    bot.send_photo(message.chat.id, owner_photo_id)

                reply = f'''- 𝐆𝐑𝐎𝗨𝐏 𝐎𝐖𝐍𝐄𝐑 ✅ |

• 𝗨𝐒𝐄𝐑𝐍𝐀𝐌𝐄 :- @{owner_username} 
• 𝐍𝐀𝐌𝐄 :- {owner_name}
• 𝐈𝐃 :- {owner_id}'''
                bot.reply_to(message, reply)
                return
        bot.reply_to(message, 'لا يمكن العثور على معلومات المالك في هذه المجموعة.')

    else:
        bot.reply_to(message, 'هذا الأمر يمكن استخدامه فقط في المجموعات.')

@bot.message_handler(func=lambda message: message.text.startswith('حظر') and message.reply_to_message is not None)
def ban(message):
    if str(message.from_user.id) != admin_id:
        bot.send_message(message.chat.id, "أنت مو مشرف")
    else:
        cid = message.chat.id
        uid = message.reply_to_message.from_user.id
        bot.kick_chat_member(cid, uid)
        bot.send_message(cid, "تم حظر العضو بنجاح")

@bot.message_handler(func=lambda message: message.text.startswith('الغاء الحظر') and message.reply_to_message is not None)
def unban(message):
    if str(message.from_user.id) != admin_id:
        bot.send_message(message.chat.id, "أنت مو مشرف")
    else:
        cid = message.chat.id
        uid = message.reply_to_message.from_user.id
        bot.unban_chat_member(cid, uid)
        bot.send_message(cid, "تم إلغاء حظر العضو بنجاح")                           
muted_users = {}

@bot.message_handler(func=lambda message: message.text == 'تقييد')
def handle_mute(message):
    chat_id = message.chat.id
    user_id = message.reply_to_message.from_user.id
    bot.restrict_chat_member(chat_id, user_id, can_send_messages=False)
    bot.reply_to(message.reply_to_message, "*- تم تقييدك في المجموعة 📛 .*",parse_mode="Markdown")

@bot.message_handler(func=lambda message: message.text == 'الغاء التقييد')
def handle_unmute(message):
    chat_id = message.chat.id
    user_id = message.reply_to_message.from_user.id
    bot.restrict_chat_member(chat_id, user_id, can_send_messages=True)
    bot.reply_to(message.reply_to_message, "*- تم إلغاء تقييدك بنجاح ✅ .*",parse_mode="Markdown")

@bot.message_handler(func=lambda message: message.reply_to_message and message.reply_to_message.from_user.id == bot.get_me().id)
def handle_user_messages(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    if user_id in muted_users and muted_users[user_id] == chat_id:
        try:
            bot.delete_message(chat_id, message.message_id)
        except telebot.apihelper.ApiTelegramException as e:
            if "message to delete not found" in str(e):
                bot.send_message(chat_id, "الرسالة التي طلبت حذفها غير موجودة")
            else:
                raise e

@bot.message_handler(func=lambda message: message.reply_to_message and message.reply_to_message.from_user.id == bot.get_me().id)
def handle_mute_unmute_confirmation(message):
    user_id = message.reply_to_message.from_user.id
    chat_id = message.chat.id
    if message.text == 'تقييد':
        muted_users[user_id] = chat_id
        bot.reply_to(message.reply_to_message, "*- تم تقييد الشخص ✅ .*",parse_mode="Markdown")
    elif message.text == 'إلغاء تقييد':
        if user_id in muted_users and muted_users[user_id] == chat_id:
            del muted_users[user_id]
            bot.reply_to(message.reply_to_message, "*تم إلغاء التقييد*",parse_mode="Markdown")

@bot.message_handler(func=lambda message: message.text and message.reply_to_message and message.text.startswith("تقييد وقتي"))
def restrict_user(message):
    if message.from_user.id not in [admin.user.id for admin in bot.get_chat_administrators(message.chat.id)]:
        bot.reply_to(message, "᥀ انت مو مشرف ᥀")
        return
    user_id = message.reply_to_message.from_user.id
    bot.restrict_chat_member(message.chat.id, user_id, until_date=int(time.time())+600)
    bot.reply_to(message.reply_to_message, "᥀ تم تقييدك تقييد وقتي ᥀")
    time.sleep(600)
    bot.restrict_chat_member(message.chat.id, user_id, can_send_messages=True, can_send_media_messages=True, can_send_other_messages=True, can_add_web_page_previews=True)
    bot.reply_to(message.reply_to_message, "᥀ تم انتهاء مدة تقييدك هسه تكدر تحجي براحتك حبيبي ᥀")

locked_groups = []

@bot.message_handler(func=lambda message: message.text == "قفل الصور")
def lock_images(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    member = bot.get_chat_member(chat_id, user_id)

    if member.status in ['administrator', 'creator']:
        if chat_id not in locked_groups:
            locked_groups.append(chat_id)
        
        bot.reply_to(message, "*- تم قفل الصور بنجاح ✅*", parse_mode="markdown")
    else:
        bot.reply_to(message, "⌁︙انت مو ادمن ياعضو 💃🏻 !")

@bot.message_handler(func=lambda message: message.text == "فتح الصور")
def unlock_images(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    member = bot.get_chat_member(chat_id, user_id)

    if member.status in ['administrator', 'creator']:
        if chat_id in locked_groups:
            locked_groups.remove(chat_id)
        
        bot.reply_to(message, "*- تم فتح الصور بنجاح *✅", parse_mode="markdown")
    else:
        bot.reply_to(message, "⌁︙انت مو ادمن ياعضو 💃🏻 !")

@bot.message_handler(content_types=['photo'])
def handle_photos(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    member = bot.get_chat_member(chat_id, user_id)

    if chat_id in locked_groups and member.status not in ['administrator', 'creator']:
        bot.delete_message(chat_id, message.message_id)

@bot.message_handler(content_types=["photo"])
def delete_images(message):
    chat_id = message.chat.id
    
    if chat_id in locked_groups:
        
        bot.delete_message(chat_id, message.message_id)

@bot.message_handler(func=lambda message: message.text.startswith('انطق'))
def text_to_speech(message):

    text = message.text.split(' ', 1)[1]


    tts = gTTS(text=text, lang='ar')
    tts.save('audio.mp3')

    audio = open('audio.mp3', 'rb')
    bot.send_audio(chat_id=message.chat.id, audio=audio, performer= '- @MMMFi', title='- تم التحويل 🧜🏻 .')

    os.remove('audio.mp3')

@bot.message_handler(func=lambda message: message.text.lower() == 'نرد')
def roll_dice(message):
    dice = random.randint(1, 6)
    if dice == 6:
        bot.reply_to(message, """مبررررررررروووووك 🥹🎉 ! 
اخيرا فزت وحصلت على 6 👾 !
يامحظوظ يا محظوظ 😉 .""")

    else:
        bot.reply_to(message, """للاسف حظك مو حلو وما حصلت 6 😔 .
حظ اوفر اذا تريد تلعب اكتب ( `نرد` ) """,parse_mode="markdown")

@bot.message_handler(func=lambda message: message.text == "ايدي المجموعة")
def send_id(message):
    chat_id = message.chat.id
    bot.reply_to(message, f"🆔 *𝐈𝐃 𝐓𝐇𝐄 𝐆𝐑𝐎𝗨𝐏 :* `{chat_id}`",parse_mode="markdown")

@bot.message_handler(func=lambda message: message.text == "ايدي")
def send_id(message):
    bot.reply_to(message, f"*🆔 𝐘𝐎𝗨𝐑 𝐓𝐄𝐋𝐄𝐆𝐑𝐀𝐌 𝐈𝐃 𝐈𝐒 :*`{message.from_user.id}`",parse_mode="markdown")
    
@bot.message_handler(func=lambda message: message.text == "اسمي")
def send_name(message):
    chat_id = message.chat.id
    chat_info = bot.get_chat(chat_id)
    first_name = chat_info.first_name
    last_name = chat_info.last_name

    if first_name and last_name:
        bot.reply_to(message, f"𝐘𝐎𝗨𝐑 𝐍𝐀𝐌𝐄 𝐈𝐒 : {first_name} {last_name}")
    elif first_name:
        bot.reply_to(message, f"𝐘𝐎𝗨𝐑 𝐍𝐀𝐌𝐄 𝐈𝐒 : {first_name}")
    else:
        bot.reply_to(message, "*I couldn't find your name.*",parse_mode="markdown")

@bot.message_handler(func=lambda message: "سلة" in message.text)
def send_basketball(message):
    bot.send_message(message.chat.id, """تبي تلعب كرة السلة ! 
يلا انت اتحداك ونشوف مين يفوز ؟ 🐈""")
    bot.send_message(message.chat.id, '🏀')
    bot.send_message(message.chat.id, """ها يل ضعيف !
انا فزت عليك يلاا انقلع 😛😛 ؟
اذا تبي تلعب مع البوت 🧜🏻 
اضغط على اي كرة تعجبك بالاسفل بين الاقواس وبعدها ارسلها 🐥 .
(`🏀`) (`🏀`) (`🏀`) (`🏀`) (`🏀`) (`🏀`) """,parse_mode="markdown")

@bot.message_handler(func=lambda m: m.text == 'كرة' and not m.text.startswith('/'))
def send_ball(message):
    bot.reply_to(message, "⚽️")
    bot.send_message(message.chat.id,"""ياخي انت فاشل ؟ 
فزت عليك بـ سلة والحين افوز عليك بـ كرة ؟ 
متى تصير قوي 🤔 ؟
اذا تبي تلعب كرة مع البوت اكتب ( كرة ) 
لكن اذا تبي تلعب مع اخوياك (اصدقائك ) 
انسخ وحده من الكرات في الاسفل 👇🏻 .
(`⚽`) (`⚽`) (`⚽`) (`⚽`) (`⚽`) (`⚽`) (`⚽`)""",parse_mode="markdown")

@bot.message_handler(func=lambda message: message.text == "تفاعلي")
def handle_command(message):
    zkaa = random.randint(1, 100)
    response = f"""• نسبة تفاعلك : {zkaa}% 🌝
شد حيلك بعد حب 👍"""
    bot.send_message(message.chat.id, response)

@bot.message_handler(func=lambda message: message.text == "ذكائي")
def handle_command(message):
    zkaa = random.randint(1, 100)
    response = f"""نسبة ذكائك هي : {zkaa}% 
ماشاء الله 🫨 !"""
    bot.send_message(message.chat.id, response)

@bot.message_handler(func=lambda message: "رفع حلو" in message.text or "رفع حلوه" in message.text)
def send_random_answer(message):
    answers = ["ۿﯛ حلوُ مآ يحتآج 😍😂","مبروڪ أصبحت حݪو برو مآڪس 😭","صدڪني حاوݪت بس شڪݪة ميساعد 😂","تم رفعه حلوو بنجاح 🥹😘"]
    response = random.choice(answers)
    bot.send_message(message.chat.id, response)

@bot.message_handler(func=lambda message: message.text == "غبائي")
def handle_command(message):
    gbaa = random.randint(1, 100)
    response = f"""نسبة غبائك يالاثول هي : %{gbaa} 
طيح الله حظك 😂😛"""
    bot.send_message(message.chat.id, response)

@bot.message_handler(func=lambda message: "تحبني" in message.text or "تحبيني" in message.text)
def send_random_answer(message):
    answers = ["لللاااا عيعيع","يعع 🤢 !","شوي بسس 🤏🏻🤏🏻","اييهه احححبكك 😉😉","كلتبن ياخفيف !!! 🤮",'شعندِيّ ، غيࢪكَ🥵♥️♥️♥️','لا محد يحبك',]
    response = random.choice(answers)
    bot.send_message(message.chat.id, response)
 
           
@bot.message_handler(func=lambda message: "سورس" in message.text or "السورس" in message.text)
def handle_source_command(message):
    bot.reply_to(message, """- This bot is developed by Hamoudi AL-Amir 𓅂""")
    bot.send_message(message.chat.id,f"[Developer 🧑🏻‍💻 .](t.me/GoodMre)",parse_mode="markdown",disable_web_page_preview="true")
    bot.send_message(message.chat.id,f"[Channel ✅.](t.me/MMMFi)",parse_mode="markdown",disable_web_page_preview="true")
    
@bot.message_handler(func=lambda message: "كت" in message.text)
def respond(message):
    options = ["كلمتك اذا احد حشرك بالنقاش ؟","متى تصير نفسية ؟","وش الي يغلب عليك دائما .. قلبك ولا عقلك ؟","اكثر شيء تحبه بـ شكلك ؟","مع او ضد الصحبة تغني عن الحب ؟","ممكن تكره احد بدون سبب ؟","كم من عشرة تشوف صوتك حلو ؟","عشان تعيش مرتاح ؟","اكثر شيء تخاف منه ؟","من النوع اللي تعترف بسرعه ولا تجحد ؟","كيف تتعامل مع الشخص اللي يرد متأخر دايم ؟","متى تنام بالعادة ؟","شخص مستحيل تمسك ضحكتك معاه؟","دائما قوة الصداقة بـ ...؟","مودك الحين ؟","كم من عشرة تحب الهدوء ؟","لو حظك ينباع ، بكم بيكون ؟","شيء من الماضي للحين عندك ؟","شخص م تحب تناقشه ؟",'نهارك يصير أجمل بوجود ..؟','افضل هديه ممكن تناسبك؟','كلمة او عبارة مستحيل تنساها ؟','شاركنا صورة او فيديو من تصويرك؟📸','عمرك شاركت بمسابقة وفزت ؟','اطول مدة قضيتها بدون اكل ؟','احقر الناس هو من ...','اكتب ثلاث اشياء تحبها ؟','اكثر مشاكلك بسبب ...؟','لو احد قالك اكرهك وش بتقول له ؟','اذا احد سألك عن شيء م تعرفه تقول م اعرف ولا تتفلسف ؟','اذا كنت شخصاً غني هل توافق على الزواج من فتاة فقيرة..؟','من اصدق في الحب الولد ولا البنت؟.','تعتقد إنك انسان لك فايدة ؟']
    response = options[random.randint(0, len(options)-1)]
    bot.reply_to(message, response)
    
    
keyboard = types.InlineKeyboardMarkup()
A9 = types.InlineKeyboardButton(text="- Developer Channel ✓", url='https://t.me/MMMFi')
keyboard.add(A9)
sudo = 1

@bot.message_handler(func=lambda message: "شعر" in message.text)
def Get(message):
    try:
        song_voice = "https://t.me/Msna_ALamir/" + str(random.randint(1, 371))
        bot.send_voice(message.chat.id, song_voice, """* ⌯︙تم اختيار الشعر لك 🤍. *""", parse_mode="markdown", reply_markup=keyboard, reply_to_message_id=message.message_id)
    except Exception as er:
        print(er)
        pass

keyboard = types.InlineKeyboardMarkup()
A9 = types.InlineKeyboardButton(text="- Developer Channel ✓", url='https://t.me/MMMFi')
keyboard.add(A9)
sudo = 1

@bot.message_handler(func=lambda message: "سوره" in message.text)
def Get(message):
    try:
        song_voice = "https://t.me/Msna_ALamir/" + str(random.randint(372, 530))
        bot.send_voice(message.chat.id, song_voice, """* ⌯︙اخترت لك هذه السورة 🕋❤️. *""", parse_mode="markdown", reply_markup=keyboard, reply_to_message_id=message.message_id)
    except Exception as er:
        print(er)
        pass

@bot.message_handler(func=lambda message: message.text == 'الرابط' and message.reply_to_message is None)
def send_group_link(message):
    chat_id = message.chat.id
    group_link = bot.export_chat_invite_link(chat_id)
    bot.reply_to(message, f"*- 𝐆𝐑𝐎𝗨𝐏 𝐋𝐈𝐍𝐊 :-* {group_link}",parse_mode="Markdown")

@bot.message_handler(func=lambda message: message.text == "الاسرع")
def start_game(message):
    words = ['محمد','فيل','دجاجه','ثلاجه','مدرسه','عطارد','العراق','مصر','السعودية','حمودي','الامير','اسد','كرسي','كارتون','سجق','خوخ','برتقال','موز','عسل','ساعه','كهرباء','سياره','شمس','قمر','نجوم','ياسمين','الجزائر','طياره','سفينه','شاحنه','شركه','ضوء','ظلام','فواكه','سمسم','شاورما','باذنجان','طماطم']
    random_word = random.choice(words)
    chat_id = message.chat.id
    bot.send_message(chat_id, "- أسرع شخص يكتب : " + random_word)
    bot.register_next_step_handler(message, check_word, random_word)

def check_word(message, random_word):
    user_word = message.text 
    chat_id = message.chat.id 

    if user_word == random_word:
        bot.reply_to(message, "أحسنت ، انت الفائز 🥳")
    else:
        bot.reply_to(message, "للأسف لم تكن أنت الاسرع، حظ اوفر في المره القادمه 😇")

locked_stickers = False

@bot.message_handler(content_types=["sticker"])
def delete_stickers(message):
    if locked_stickers:
        user = bot.get_chat_member(message.chat.id, message.from_user.id)
        if user.status not in ['administrator', 'creator']:
            bot.delete_message(message.chat.id, message.message_id)

@bot.message_handler(func=lambda message: message.text == 'قفل الملصقات')
def lock_stickers(message):
    user = bot.get_chat_member(message.chat.id, message.from_user.id)
    if user.status in ['administrator', 'creator']:
        global locked_stickers
        locked_stickers = True
        bot.reply_to(message, '*- تم قفل الملصقات بنجاح ✅ .*',parse_mode="markdown")

@bot.message_handler(func=lambda message: message.text == 'فتح الملصقات')
def unlock_stickers(message):
    user = bot.get_chat_member(message.chat.id, message.from_user.id)
    if user.status in ['administrator', 'creator']:
        global locked_stickers
        locked_stickers = False
        bot.reply_to(message, '*- تم فتح الملصقات بنجاح ✅ .*',parse_mode="markdown")

@bot.message_handler(func=lambda message: message.text in ['قفل الملصقات', 'فتح الملصقات'])
def ignore_commands(message):
    user = bot.get_chat_member(message.chat.id, message.from_user.id)
    if user.status not in ['administrator', 'creator']:
        bot.delete_message(message.chat.id, message.message_id)
                               
warnings = {} 
restricted_users = [] 
@bot.message_handler(func=lambda message: message.chat.type == 'group' or message.chat.type == 'supergroup')
def handle_group_message(message):
    if message.reply_to_message and is_admin(message.from_user.id, message.chat.id):
        user_id = message.reply_to_message.from_user.id
        if user_id in restricted_users:
            bot.reply_to(message, "*- تم تحذير هذا الشخص 3 مرات سابقاً وتم تقييده، لـ تقييد الشخص مرة أخرى ارسل الأمر* `تقييد` *بالرد علية 📛.*",parse_mode="Markdown")
        else:
            if user_id not in warnings:
                warnings[user_id] = 1
            else:
                warnings[user_id] += 1
            if warnings[user_id] == 3:
                bot.restrict_chat_member(message.chat.id, user_id, until_date=0)
                restricted_users.append(user_id)
                bot.reply_to(message, f"*- تم تقييد المستخدم* [{message.reply_to_message.from_user.first_name}](tg://user?id={user_id}) *بنجاح بسبب تحذيره ثلاث مرات!* ✅",parse_mode="Markdown")
            else:
                warning_message = "تحذير!"
                if warnings[user_id] == 2:
                    warning_message += f" لديك *تحذيرين* من اصل *ثلاث، كن حذراً ⚠️.*\n\n[{message.reply_to_message.from_user.first_name}](tg://user?id={user_id})"
                else:
                    warning_message += f" لديك تحذير *واحد* من اصل *ثلاث كن حذراً ⚠️.*\n\n[{message.reply_to_message.from_user.first_name}](tg://user?id={user_id})"
                bot.reply_to(message, warning_message, parse_mode="Markdown")
def is_admin(user_id, chat_id):
    admins = bot.get_chat_administrators(chat_id)
    admin_ids = [admin.user.id for admin in admins]
    return user_id in admin_ids

@bot.message_handler(func=lambda message: message.chat.type ==  'private',content_types=['text'])
def forward(message): 
 bot.forward_message(sudo,message.chat.id,message.message_id)
 
#This bot is developed by Hamoudi AL-Amir 𓅂
#Developer Channel | @MMMFi ✓.       

print("- @MMMFi")
bot.polling()
